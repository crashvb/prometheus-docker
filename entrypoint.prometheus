#!/bin/bash

set -e

# Configure: prometheus
if [[ ! -e $EP_RUN ]] ; then
	log "Configuring $(basename $0) for first run ..."

	# Note: Key size must be >= 3072 for "HIGH" security:
	export PROMETHEUS_CERT_DAYS=${PROMETHEUS_CERT_DAYS:-30}
	export PROMETHEUS_KEY_SIZE=${PROMETHEUS_KEY_SIZE:-4096}

		# Generate keypairs ...
	if [[ -e $EP_SECRETS_ROOT/prometheusca.crt && -e $EP_SECRETS_ROOT/prometheus.crt && -e $EP_SECRETS_ROOT/prometheus.key ]] ; then
		log "Importing prometheusca.crt, prometheus.crt, and prometheus.key from secrets ..."
	else
		log "Generating prometheusca.crt, prometheus.crt, and prometheus.key in secrets ..."

		log "   certificate authority"
		openssl genrsa \
			-out /dev/shm/prometheusca.key \
			$PROMETHEUS_KEY_SIZE
		openssl req \
			-days $PROMETHEUS_CERT_DAYS \
			-key /dev/shm/prometheusca.key \
			-new \
			-nodes \
			-out $EP_SECRETS_ROOT/prometheusca.crt \
			-sha256 \
			-subj "/CN=prometheus ca" \
			-x509

		log "   server certificate"
		openssl genrsa \
			-out $EP_SECRETS_ROOT/prometheus.key \
			$PROMETHEUS_KEY_SIZE
		openssl req \
			-key $EP_SECRETS_ROOT/prometheus.key \
			-new \
			-nodes \
			-out /dev/shm/prometheus.csr \
			-sha256 \
			-subj "/CN=prometheus server"
		openssl x509 \
			-CA $EP_SECRETS_ROOT/prometheusca.crt \
			-CAkey /dev/shm/prometheusca.key \
			-CAcreateserial \
			-days $PROMETHEUS_CERT_DAYS \
			-in /dev/shm/prometheus.csr \
			-out $EP_SECRETS_ROOT/prometheus.crt \
			-req \
			-sha256

		rm /dev/shm/{prometheusca.key,prometheus.csr} $EP_SECRETS_ROOT/prometheusca.srl

	fi
	install --group=ssl-cert --mode=0640 --owner=root $EP_SECRETS_ROOT/prometheus.key /etc/ssl/private/
	install --group=root --mode=0644 --owner=root $EP_SECRETS_ROOT/prometheus{,ca}.crt /etc/ssl/certs/

	ln --symbolic /etc/ssl/certs/prometheusca.crt /usr/share/ca-certificates/
	echo prometheusca.crt >> /etc/ca-certificates.conf
	update-ca-certificates

	# .htpasswd ...
	log "Generating: .htpasswd ..."
	install --group=root --mode=0644 --owner=root /dev/null $PROMETHEUS_CONFIG/.htpasswd
	export PROMETHEUS_USERS=${PROMETHEUS_USERS:=admin,prometheus}
	for i in $(echo $PROMETHEUS_USERS | sed --expression="s/,/ /g"); do
		user=${i,,}
		log "   $user"
		generate_password "prometheus_${user}"
		var="PROMETHEUS_${user^^}_PASSWORD"
		echo ${!var} | htpasswd -iBC 10 $PROMETHEUS_CONFIG/.htpasswd ${user}
	done
	export PROMETHEUS_USERS=$(awk -F : '{print "  " $1 ": " $2}' $PROMETHEUS_CONFIG/.htpasswd)

	# prometheus.yml
	if [[ ! -e $PROMETHEUS_CONFIG/prometheus.yml ]] ; then
		render_template /usr/local/share/prometheus/prometheus.yml $PROMETHEUS_CONFIG/prometheus.yml
	else
		log "Skipping: prometheus.yml ..."
	fi

	# web-config.yml
	if [[ ! -e $PROMETHEUS_CONFIG/web-config.yml ]] ; then
		render_template /usr/local/share/prometheus/web-config.yml $PROMETHEUS_CONFIG/web-config.yml
	else
		log "Skipping: web-config.yml ..."
	fi

	ln --force --symbolic /usr/share/prometheus/console_libraries /usr/share/prometheus/consoles/ /etc/prometheus/

	log "Applying ownership and permissions ..."
	find $PROMETHEUS_DATA \( \! -user ${PROMETHEUS_NAME} -o \! -group ${PROMETHEUS_NAME} \) -exec chown ${PROMETHEUS_NAME}:${PROMETHEUS_NAME} {} \;
fi

